<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>bank</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-7149112110977339767</string>
			<key>name</key>
			<string>localhost</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGoCwwXGBkaHiVVJG51bGzTDQ4PEBMWV05TLmtleXNaTlMu
			b2JqZWN0c1YkY2xhc3OiERKAAoADohQVgASABYAHVHR5cGVUcm93
			c18QHVNlbGVjdGlvbkRldGFpbFR5cGVOU0luZGV4U2V00hsPHB1c
			TlNSYW5nZUNvdW50EACABtIfICEiWiRjbGFzc25hbWVYJGNsYXNz
			ZXNaTlNJbmRleFNldKIjJFpOU0luZGV4U2V0WE5TT2JqZWN00h8g
			JidcTlNEaWN0aW9uYXJ5oiYkAAgAEQAaACQAKQAyADcASQBMAFEA
			UwBcAGIAaQBxAHwAgwCGAIgAigCNAI8AkQCTAJgAnQC9AMIAzwDR
			ANMA2ADjAOwA9wD6AQUBDgETASAAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {1683, 634}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>select loan_id, account_id, amount, payments, duration, amount-payments as balance, round(avg(amount-payments)
over (partition by duration)) as avg_balance
from loan
where amount &gt; 1000
order by duration, balance DESC;

# rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
dense_rank() over (partition by district_name order by amount_of_loan DESC) as 'ranking'
from clients_and_loans
order by district_name;
</string>
			<key>table</key>
			<string>clients_and_loans</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
dense_rank() over (partition by district_name order by amount_of_loan DESC) as 'ranking'
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name order by amount_of_loan DESC) as 'ranking'
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name order by amount_of_loan DESC) as 'rank'
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name order by amount_of_loan DESC)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name order by amount DESC)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name, order by amount DESC)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name,  
rank() over (partition by district_name)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
rank() over (partition by district_name)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
rank over(partition by district_name)
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
from clients_and_loans
order by district_name</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
from clients_and_loans</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
rank() over(
partition by district_name
order by district_name
)
from clients_and_loans</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name 
rank() over(
partition by district_name
order by district_name
)
from client_and_loans</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name from client_and_loans 
rank() over(
partition by district_name
order by district_name
)</string>
		<string># rank based on the amount in each district

select client_id, amount_of_loan, district_name from client_and_loans 
rank() over(
partition by district_name
)</string>
		<string>select loan_id, account_id, amount, payments, duration, amount-payments as balance, round(avg(amount-payments)
over (partition by duration)) as avg_balance
from loan
where amount &gt; 1000
order by duration, balance DESC</string>
		<string>select loan_id, account_id, amount, payments, duration, amount-payments as balance, round(avg(amount-payments)
over (partition by duration)) as avg_balance
from `loan_id`where amount &gt; 1000
order by duration, balance DESC</string>
		<string>select loan.id, account_id, amount, payments, duration, amount-payments as balance, round(avg(amount-payments)
over (partition by duration)) as avg_balance
from `loan_id`where amount &gt; 1000
order by duration, balance DESC</string>
		<string>create view clients_and_loans as
select c.client_id, a.district_id, l.loan_id, a.account_id, d.A2 as district_name, l.amount as amount_of_loan  from client c
join disp dp
on c.client_id = dp.client_id
join account a
on a.account_id = dp.account_id
join loan l
on l.account_id = a.account_id
join district d
on d.A1 = a.district_id</string>
		<string>select c.client_id, a.district_id, l.loan_id, a.account_id, d.A2 as district_name, l.amount as amount_of_loan  from client c
join disp dp
on c.client_id = dp.client_id
join account a
on a.account_id = dp.account_id
join loan l
on l.account_id = a.account_id
join district d
on d.A1 = a.district_id</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.23</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
